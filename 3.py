'''
Немного порывшись в памяти вы вспомнили тройку широкоплечих студентов-программистов,
которые могли бы быть хорошими кандидатами. Но вот имен их, как ни старались, припомнить не смогли.

Однако вы знали, что при поступлении будущие студенты заполняли анкету. Потом же на основании этих
анкет были созданы списки для разделения по изучаемому языку (чтобы учитывать ранее приобретенные знания
и не смешивать языковые группы в одну кучу) и списки, описывающие хобби студентов. Дело оставалось за малым
— взять тех, кто знает английский и одновременно имеет интерес к спорту. Ну и совместить это дело со списком
тех, кто перешагнул черту 20-летия, который был получен загодя

Вам нужно написать функцию find_athlets *
Функция find_athlets принимает 3 списка с именами студентов. В первом списке (know_english) — список тех,
кто хорошо владеет английским языком. Второй (sportsmen) — содержит имена тех, кто увлекается спортом. Ну и
 третий (more_than_20_years) — предоставляет информацию о тех, кто старше 20 лет. Функция возвращает список
 имен студентов, которые подходят под все три критерия. Пример входных данных приведен ниже.
'''

know_english = ["Vasya", "Jimmy", "Max", "Peter", "Eric", "Zoi", "Felix"]
sportsmen = ["Don", "Peter", "Eric", "Jimmy", "Mark"]
more_than_20_years = ["Peter", "Julie", "Jimmy", "Mark", "Max"]


# в условии все и так хорошо сформулировано - нужно просто реализовать
# пересечение трех множеств, т.е. найти тех, кто присутствует в каждом из списков
def find_athlets(list1, list2, list3):
    return list((set(list1).intersection(set(list2))).intersection(set(list3)))


print(find_athlets(know_english, sportsmen, more_than_20_years))
